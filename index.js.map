{
  "version": 3,
  "sources": ["../src/getCookieValue.ts", "../src/index.ts"],
  "sourcesContent": ["export default function getCookieValue (name: string): string | undefined {\n  if (!name || typeof name !== 'string') {\n    throw new Error('Invalid cookie name provided');\n  }\n\n  const namePattern = /^[^;=\\s]+$/;\n  if (!namePattern.test(name)) {\n    throw new Error('Invalid characters in cookie name');\n  }\n\n  const value = `; ${document.cookie}`;\n  const parts = value.split(`; ${name}=`);\n\n  if (parts.length === 2) {\n    const decodedValue = decodeURIComponent(parts.pop()?.split(';').shift() ?? '');\n    if (decodedValue) {\n      return decodedValue;\n    } else {\n      throw new Error('Error decoding cookie value');\n    }\n  }\n}\n", "import getCookieValue from './getCookieValue.ts';\n\nexport interface TestConfig {\n  name: string\n  variants: Record<string, number>\n}\n\nexport let abTests: Record<string, string | number> = {};\n(globalThis as any).abTests = abTests;\n\n// Tests expire in 30 days\nconst TEST_EXPIRE_TIME = (60 * 60 * 24) * 30;\n\nfunction ensureStyleAppended (): void {\n  if (document.getElementById('abTestStyles') != null) {\n    return;\n  }\n\n  const style = globalThis.document.createElement('style');\n  style.id = 'abTestStyles';\n  globalThis.document.head.appendChild(style);\n\n  insertCssRule('[ab-test-variant]:not([ab-test-variant=\"control\"]) { display: none; }');\n}\n\nfunction insertCssRule (rule: string): void {\n  const stylesheet = document.getElementById('abTestStyles') as HTMLStyleElement;\n  const sheet = stylesheet.sheet as CSSStyleSheet;\n  sheet.insertRule(rule, sheet.cssRules.length);\n}\n\nexport default function init (config: TestConfig[]): Record<string, string | number> {\n  ensureStyleAppended();\n  abTests = {};\n\n  for (const test of config) {\n    setupTest(test);\n  }\n\n  function setupTest (test: TestConfig): void {\n    const cookieName = `ab-${test.name}`;\n    let chosenVariant = getCookieValue(cookieName);\n\n    if (chosenVariant && !test.variants[chosenVariant]) {\n      chosenVariant = undefined;\n    }\n\n    abTests[test.name] = chosenVariant ?? 'control';\n\n    if (!chosenVariant) {\n      const rand = Math.random();\n      let cumulativeProbability = 0;\n      chosenVariant = 'control';\n      for (const variant in test.variants) {\n        cumulativeProbability += test.variants[variant];\n        if (rand <= cumulativeProbability) {\n          chosenVariant = variant;\n          break;\n        }\n      }\n\n      globalThis.document.cookie = `${cookieName}=${chosenVariant}; path=/; max-age=${TEST_EXPIRE_TIME}`;\n    }\n\n    for (const variant in test.variants) {\n      const rule = `[ab-test-name=\"${test.name}\"][ab-test-variant=\"${variant}\"] { display: ${variant === chosenVariant ? 'inherit' : 'none'}; }`;\n      insertCssRule(rule);\n    }\n  }\n\n  return abTests;\n}\n\nconst configPath = globalThis.document?.currentScript?.getAttribute('config');\n\nif (configPath) {\n  ensureStyleAppended();\n\n  fetch(configPath)\n    .then(async (response) => await response.json())\n    .then(init)\n    .catch((error) => { console.error('Error loading A/B test configuration:', error); });\n}\n"],
  "mappings": ";AAAe,SAAR,eAAiC,MAAkC;AACxE,MAAI,CAAC,QAAQ,OAAO,SAAS,UAAU;AACrC,UAAM,IAAI,MAAM,8BAA8B;AAAA,EAChD;AAEA,QAAM,cAAc;AACpB,MAAI,CAAC,YAAY,KAAK,IAAI,GAAG;AAC3B,UAAM,IAAI,MAAM,mCAAmC;AAAA,EACrD;AAEA,QAAM,QAAQ,KAAK,SAAS;AAC5B,QAAM,QAAQ,MAAM,MAAM,KAAK,OAAO;AAEtC,MAAI,MAAM,WAAW,GAAG;AACtB,UAAM,eAAe,mBAAmB,MAAM,IAAI,GAAG,MAAM,GAAG,EAAE,MAAM,KAAK,EAAE;AAC7E,QAAI,cAAc;AAChB,aAAO;AAAA,IACT,OAAO;AACL,YAAM,IAAI,MAAM,6BAA6B;AAAA,IAC/C;AAAA,EACF;AACF;;;ACdO,IAAI,UAA2C,CAAC;AACtD,WAAmB,UAAU;AAG9B,IAAM,mBAAoB,KAAK,KAAK,KAAM;AAE1C,SAAS,sBAA6B;AACpC,MAAI,SAAS,eAAe,cAAc,KAAK,MAAM;AACnD;AAAA,EACF;AAEA,QAAM,QAAQ,WAAW,SAAS,cAAc,OAAO;AACvD,QAAM,KAAK;AACX,aAAW,SAAS,KAAK,YAAY,KAAK;AAE1C,gBAAc,uEAAuE;AACvF;AAEA,SAAS,cAAe,MAAoB;AAC1C,QAAM,aAAa,SAAS,eAAe,cAAc;AACzD,QAAM,QAAQ,WAAW;AACzB,QAAM,WAAW,MAAM,MAAM,SAAS,MAAM;AAC9C;AAEe,SAAR,KAAuB,QAAuD;AACnF,sBAAoB;AACpB,YAAU,CAAC;AAEX,aAAW,QAAQ,QAAQ;AACzB,cAAU,IAAI;AAAA,EAChB;AAEA,WAAS,UAAW,MAAwB;AAC1C,UAAM,aAAa,MAAM,KAAK;AAC9B,QAAI,gBAAgB,eAAe,UAAU;AAE7C,QAAI,iBAAiB,CAAC,KAAK,SAAS,aAAa,GAAG;AAClD,sBAAgB;AAAA,IAClB;AAEA,YAAQ,KAAK,IAAI,IAAI,iBAAiB;AAEtC,QAAI,CAAC,eAAe;AAClB,YAAM,OAAO,KAAK,OAAO;AACzB,UAAI,wBAAwB;AAC5B,sBAAgB;AAChB,iBAAW,WAAW,KAAK,UAAU;AACnC,iCAAyB,KAAK,SAAS,OAAO;AAC9C,YAAI,QAAQ,uBAAuB;AACjC,0BAAgB;AAChB;AAAA,QACF;AAAA,MACF;AAEA,iBAAW,SAAS,SAAS,GAAG,cAAc,kCAAkC;AAAA,IAClF;AAEA,eAAW,WAAW,KAAK,UAAU;AACnC,YAAM,OAAO,kBAAkB,KAAK,2BAA2B,wBAAwB,YAAY,gBAAgB,YAAY;AAC/H,oBAAc,IAAI;AAAA,IACpB;AAAA,EACF;AAEA,SAAO;AACT;AAEA,IAAM,aAAa,WAAW,UAAU,eAAe,aAAa,QAAQ;AAE5E,IAAI,YAAY;AACd,sBAAoB;AAEpB,QAAM,UAAU,EACb,KAAK,OAAO,aAAa,MAAM,SAAS,KAAK,CAAC,EAC9C,KAAK,IAAI,EACT,MAAM,CAAC,UAAU;AAAE,YAAQ,MAAM,yCAAyC,KAAK;AAAA,EAAG,CAAC;AACxF;",
  "names": []
}
